<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="mypageMapper">
	
	<resultMap id="reservationSet" type="Reservation">
		<id column="reservation_no" property="reservNo"/>
		<result column="user_id" property="userId"/>
		<result column="spc_no" property="spcNo"/>
		<result column="user_id_h" property="userIdHost"/>
		<result column="reservation_date" property="reservDate"/>
		<result column="reservation_name" property="reservName"/>
		<result column="total_time" property="totalTime"/>
		<result column="reservation_total" property="reservTotal"/>
		<result column="purpose_type" property="perpose"/>
		<result column="amount_time" property="amountTime"/>
		<result column="use_date" property="useDate"/>
		<result column="use_time" property="useTime"/>
		<result column="end_date" property="endDate"/>
		<result column="end_time" property="endTime"/>
		<result column="pay_date" property="payDate"/>
		<result column="pay_sum" property="paySum"/>
		<result column="refund" property="refund"/>
		<result column="pay_method" property="payMethod"/>
		<result column="reservation_status" property="reservStatus"/>
		<result column="spc_no" property="ReSpcNo"/>
		<result column="spc_name" property="ReSpcName"/>
		<result column="spc_type" property="ReSpcType"/>
		<result column="spc_img" property="ReSpcImg"/>
		<result column="spc_chimg" property="ReSpcChimg"/>
		<result column="spc_price" property="ReSpcPrice"/>
		<result column="map_location" property="location"/>
		<result column="BUSINESS_NO" property="HoNo"/>
		<result column="BUSINESS_NAME" property="HoName"/>
		<result column="BUSINESS_PHONE" property="HoPhone"/>
		<result column="BUSINESS_EMAIL" property="HoEmail"/>
		<result column="BUSINESS_LOC" property="HoLoc"/>
	</resultMap>
	
	<resultMap id="reportSet" type="reservReport">
		<id column="report_no" property="reportNo" />
		<result column="spc_no" property="spcNo" />
		<result column="review_no" property="reviewNo" />
		<result column="report_type1" property="reportType1" />
		<result column="report_type2" property="reportType2" />
		<result column="report_writer" property="reportWriter" />
		<result column="report_target" property="reportTarget" />
		<result column="report_content" property="reportContent" />
		<result column="report_date" property="reportDate" />
		<result column="report_status" property="reportStatus" />
	</resultMap>
	
	<resultMap id="myReviewSet" type="myReview">
  		<id column="REVIEW_NO" property="reviewNo" />
  		<result column="SPC_NO" property="spcNo" />
  		<result column="REVIEW_WRITER" property="reviewWriter" />
  		<result column="REVIEW_TITLE" property="reviewTitle" />
  		<result column="REVIEW_CONTENT" property="reviewContent" jdbcType="CLOB" javaType="java.lang.String"  />
  		<result column="REVIEW_SCORE" property="reviewScore" />
  		<result column="REVIEW_DATE" property="reviewDate" />
  		<result column="REVIEW_STATUS" property="reviewStatus" />
  		<result column="REVIEW_REPLY" property="reviewReply" />
  		<result column="USER_NICKNAME" property="userNickname" />
  		<result column="USER_PROFILE_C" property="userProfileCh" />
  		<result column="PROFILE_PATH" property="profilePath" />
  		<result column="reservation_no" property="reservNo"/>
  		<result column="reservation_status" property="reservStatus"/>
  		<result column="use_date" property="useDate"/>
  		<result column="spc_name" property="spcName"/>
  		<result column="spc_type" property="spcType"/>
  		<result column="map_location" property="location"/>
  	</resultMap>
  	
  	 <resultMap id="qnaResultSet" type="myQna">
  	  	<id column="QA_NO" property="qaNo" />
  		<result column="QA_CONTENT" property="qaContent" jdbcType="CLOB" javaType="java.lang.String" />
  		<result column="QA_WRITER" property="qaWriter" />
  		<result column="QA_DATE" property="qaDate" />
  		<result column="QA_ANSWER" property="qaAnswer" />
  		<result column="QA_ANSWERDATE" property="qaAnswerDate" />
  		<result column="QA_STATUS" property="qaStatus" />
  		<result column="QA_SECRET" property="qaSecret" />
  		<result column="USER_ID" property="userId" />
  		<result column="SPC_NO" property="spaceNo" />
  		<result column="SPC_NAME" property="spcName" />
  		<result column="SPC_TYPE" property="spcType" />
  		<result column="MAP_LOCATION" property="location" />
  	</resultMap>
  	
  	<resultMap id="voicesInquirySet" type="VoicesInquiry">
  		<id column="inquiry_no" property="inquiryNo"/>
  		<result column="user_id" property="inquiryWriter"/>
  		<result column="inquiry_title" property="inquiryTitle"/>
  		<result column="inquiry_content" property="inquiryContent"/>
  		<result column="inquiry_reply" property="inquiryReply"/>
  		<result column="reply_status" property="replyStatus"/>
  		<result column="enroll_date" property="inquiryDate"/>
  		<result column="reply_date" property="replyDate"/>
  		<result column="status" property="inquiryStatus"/> 	
  	</resultMap>
	
	<resultMap id="wishResultSet" type="myWish">
		<result column="user_id" property="userId"/>
		<result column="spc_no" property="spcNo"/>
		<result column="wish_date" property="wishDate"/>
	</resultMap>
	
	<resultMap id="spaceInfoSet" type="WishSpaceInfo">
  		<id column="SPC_NO" property="spcNo" />
  		<result column="SPC_NAME" property="spcName" />
  		<result column="SPC_INT" property="spcInt" />
  		<result column="SPC_LONG" property="spcLong" />
  		<result column="SPC_TAG" property="spcTag" />
  		<result column="SPC_TYPE" property="spcType" />
  		<result column="SPC_MIN" property="spcMin" />
  		<result column="SPC_MAX" property="spcMax" />
  		<result column="SPC_IMG" property="spcImg" />
  		<result column="SPC_CHIMG" property="spcChimg" />
  		<result column="SPC_PRICE" property="spcPrice" />
  		<result column="SPC_HOURS" property="spcHours" />
  		<result column="SPC_HOLIDAY" property="spcHoliday" />
  		<result column="SPC_STATUS" property="spcStatus" />
  		<result column="SPC_CONVN" property="spcConvn" />
  		<result column="USER_ID" property="userId" />
  		<result column="MAP_LATITUDE" property="latitude" />
  		<result column="MAP_LONGITUDE" property="longitude" />
  		<result column="MAP_LOCATION" property="location" />
  		<result column="REVIEWS" property="reviews" />
  		<result column="WISHES" property="wishes" />
  		<result column="REVIEW_CONTENT" property="reviewCon" jdbcType="CLOB" javaType="java.lang.String" />
  		<result column="REVIEW_SCORE" property="reviewScore" />
  		<result column="REVIEW_DATE" property="reviewDate" />
  	</resultMap>
	
	
	<!-- 로그인한 유저의 예약총게시물 갯수 -->
	<select id="selectReservListCount" parameterType="string" resultType="_int">
		select
		       count(*)
		  from reservation
		 where user_id=#{userId}
	</select>
	
	<!-- 예약리스트 -->
	<select id="selectReservList" resultMap="reservationSet">
		select
		        r.reservation_no
		      , r.user_id
		      , to_char(r.reservation_date, 'YYYY-MM-DD') reservation_date
		      , r.total_time
		      , r.reservation_total
		      , r.reservation_status
		      , r.use_time
		      , r.end_time
		      , r.pay_sum
		      , spc_no
		      , spc_name
		      , spc_type
		      , spc_img
		      , spc_chimg
		      , spc_price
		      , substr(map_location, 0, 2) as map_location
		  from reservation r
		  join space_info using(spc_no)
        where r.user_id=#{userId}
	</select>
	
	<!-- 예약번호로 정렬한 예약리스트  -->
	<select id="alignReservList"  resultMap="reservationSet">
		select
	        r.reservation_no
	      , r.user_id
	      , to_char(r.reservation_date, 'YYYY-MM-DD') reservation_date
	      , r.total_time
	      , r.reservation_total
	      , r.reservation_status
	      , r.use_time
	      , r.end_time
	      , r.pay_sum
	      , spc_no
	      , spc_name
	      , spc_type
	      , spc_img
	      , spc_chimg
	      , spc_price
	      , substr(map_location, 0, 2) as map_location
	  from reservation r
	  join space_info using(spc_no)
     where r.user_id=#{userId}
     order by
       	<choose>
			<when test="align eq '이용날짜순'">r.use_date desc</when>
			<otherwise>r.reservation_no desc</otherwise>
		</choose>
	</select>
	
	<!-- 예약상세조회 -->
	<select id="selectDetailReserv" resultMap="reservationSet">
		select
		        r.reservation_no
		      , r.user_id_h
		      , r.reservation_total
		      , r.reservation_date
		      , r.reservation_status
		      , r.total_time
		      , r.use_date
		      , r.use_time
		      , r.end_date
		      , r.end_time
		      , r.purpose_type
		      , r.pay_method
		      , r.pay_date
		      , r.pay_sum
		      , r.user_id
		      , sp.spc_no
		      , sp.spc_name
		      , sp.spc_type
		      , sp.spc_price
		      , sp.map_location
		      , h.business_no
		      , h.business_name
		      , h.business_phone
		      , h.business_email
		      , h.business_loc
	  from reservation r
	  join space_info sp on(r.spc_no=sp.spc_no)
	  join host_info h on(sp.user_id=h.user_id)
	 where r.user_id = #{userId}
	   and r.reservation_no = #{reservNo}
	</select>
	
	<!-- 예약취소하기 -->
	<update id="deleteReserv" parameterType="_int">
		update
		        reservation
		    set reservation_status='취소환불'
		 where reservation_no=#{reservNo}
		   and reservation_status like '%예약확정%'
	</update>
	
	<!-- 호스트,공간신고하기 -->
	<insert id="reportReserv" parameterType="Report">
		insert
		  into report
		  (
		     report_no
		   , report_type1
		   , report_type2
		   , report_writer
		   , report_target
		   , report_content
		   , report_date
		  )
		  values
		  (
		    seq_report.nextval
		  , #{reportType1}
		  , #{reportType2}
		  , #{reportWriter}
		  , #{reportTarget}
		  , #{reportContent}
		  , sysdate
		  )
	</insert>
	
	
	
	<!-- 이용후기 -->
	<!-- 이용후기 총게시물 갯수 -->
	<select id="selectMyReviewListCount" parameterType="string" resultType="_int">
		 select
		       count(*)
		  from review rv
		  join reservation r on(rv.spc_no=r.spc_no)
		 where review_writer=#{userId}
		   and reservation_status like '%이용완료%'
	</select>
	
	<!-- 이용후기 게시물리스트 -->
	<select id="selectMyReviewList" resultMap="myReviewSet">
		select
		       r.reservation_no
		     , r.use_date
		     , r.reservation_status
		     , rv.review_no
		     , rv.review_writer
		     , rv.review_title
		     , rv.review_content
		     , rv.review_date
		     , rv.review_status
		     <if test="reviewReply != null">
		     , rv.review_reply
		     </if>
		     , sp.spc_no
		     , sp.spc_name
		     , sp.spc_type
		     , substr(map_location, 0, 2) as map_location
		  from review rv
		  join space_info sp on(sp.spc_no=rv.spc_no)
		full outer  
		      join reservation r on(sp.spc_no=r.spc_no)
		 where review_writer=#{userId}
		   and r.user_id=#{userId}
		   and review_status='Y'
		   and reservation_status like '%이용완료%'
		 order 
		    by review_date desc
	</select>
	
	<select id="selectReviewEnrollForm" parameterType="_int" resultMap="reservationSet">
		select
		        r.reservation_no
		      , r.use_date
		      , sp.spc_no
		      , sp.spc_name
		      , sp.spc_type
		      , substr(map_location, 0, 2) as map_location
		  from reservation r
		  join space_info sp on(r.spc_no=sp.spc_no)
		   and reservation_no=${reservNo}
	</select>
	
	<insert id="insertMyReview" parameterType="myReview">
		insert
		  into review
		  (
		     review_no
		   , spc_no
		   , review_writer
		   , review_title
		   , review_content
		   , review_score
		   , review_date
		  )
		  values
		  (
		     seq_review.nextval
		   , #{spcNo}
		   , #{reviewWriter}
		   , #{reviewTitle}
		   , #{reviewContent}
		   , #{reviewScore}
		   , sysdate
		  )
	</insert>
	
	
	<update id="deleteMyReview" parameterType="_int">
		update
		       review
		   set review_status='N'
		 where review_no=#{reviewNo}
	</update>
	
	
	
	<!-- QnA -->
	<select id="selectMyQnaListCount" parameterType="string" resultType="_int">
		 select
		       count(*)
		  from question_answer q
		  join member m on(q.user_id=m.user_id)
		 where q.user_id=#{userId}
	</select>
	
	<select id="selectMyQnaList" resultMap="qnaResultSet">
		select
		       q.qa_no
		     , q.qa_content
		     , q.qa_writer
		     , q.qa_date
		     , q.qa_answer
		     , q.qa_answerdate
		     , q.qa_status
		     , q.qa_secret
		     , q.user_id
		     , sp.spc_no
		     , sp.spc_name
		     , sp.spc_type
		     , substr(sp.map_location, 0, 2) as map_location
		  from question_answer q
		  join space_info sp on(q.spc_no=sp.spc_no)
		 where q.user_id=#{userId}
		   and qa_status='Y'
	</select>
	
	<update id="deleteMyQna" parameterType="_int">
		update
		       question_answer
		   set qa_status='N'
		 where qa_no=#{qaNo}
	</update>
	
	
	
	<!-- 1:1문의 -->
	<select id="selectMyInquiryListCount" parameterType="string" resultType="_int">
		 select
		       count(*)
		  from inquiry i
		  join member m on(i.user_id=m.user_id)
		 where i.user_id=#{userId}
	</select>
	
	<select id="selectMyInquiryList"  parameterType="string" resultMap="voicesInquirySet">
		select
		       i.inquiry_no
		     , i.user_id
		     , i.inquiry_title
		     , i.inquiry_content
		     , i.inquiry_reply
		     , i.reply_status
		     , i.enroll_date
		     , i.reply_date
		     , i.status
		  from inquiry i
		 where i.user_id=#{userId}
		   and i.status='Y'
	</select>

	<update id="deleteMyInquiry" parameterType="_int">
		update
		       inquiry
		   set status='N'
		 where inquiry_no=#{inquiryNo}
	</update>
	
	
	
	<!-- 찜한공간 -->
	<select id="selectMyWishListCount" parameterType="string" resultType="_int">
		select
		       count(*)
		  from wish
		 where user_id=#{userId}
	</select>
	
	
	<select id="selectMyWishList" parameterType="string" resultMap="spaceInfoSet">
		select *
		from (
		    select * 
		      from (
		            select 
		                   spc_no
		                 , spc_name
		                 , map_location
		                 , spc_type
		                 , spc_img
		                 , spc_chimg
		                 , spc_tag
		                 , spc_price
		                 , count(review_no) reviews
		              from space_info
		              full outer join review using(spc_no)
		              where spc_status='Y'
		              group by spc_no, spc_name, map_location, spc_type, spc_img, spc_chimg, spc_tag, spc_price
		            )
		      join (   
		            select 
		                   spc_no 
		                 , count (*) wishes
		            from wish
		           where user_id=#{userId}
		            group by spc_no
		            order by wish_date desc
		            ) 
		     using (spc_no)
		     order 
		        by reviews desc, wishes desc
		    )
	</select>
	
	
</mapper>



















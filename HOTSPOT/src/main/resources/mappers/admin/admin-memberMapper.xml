<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="memberMapper">

	<resultMap id="adminMemberResultSet" type="adminMember">
		<id column="user_id" property="userId"></id>
		<result column="user_type" property="userType" />
		<result column="user_pwd" property="userPwd" />
		<result column="user_nickname" property="userNickname" />
		<result column="user_email" property="userEmail" />
		<result column="user_phone" property="userPhone" />
		<result column="user_profile" property="userProfile" />
		<result column="user_profile_c" property="userProfileC" />
		<result column="profile_path" property="profilePath" />
		<result column="user_status" property="userStatus" />
		<result column="enroll_date" property="enrollDate" />
		<result column="modify_date" property="modifyDate" />
		<result column="withdrawal_date" property="withdrawalDate" />
		<result column="user_memo" property="userMemo" />
		<result column="host_status" property="hostStatus" />
	</resultMap>
	
	<resultMap id="adminHostInfoResultSet" type="adminHostInfo">
		<id column="user_id" property="userId"></id>
		<result column="business_no" property="businessNo" />
		<result column="business_name" property="businessName" />
		<result column="business_license" property="businessLicense" />
		<result column="license_path" property="licensePath" />
		<result column="business_loc" property="businessLoc" />
		<result column="business_acc" property="businessAcc" />
		<result column="business_phone" property="businessPhone" />
		<result column="business_email" property="businessEmail" />
		<result column="host_status" property="hostStatus" />
	</resultMap>	
	
	<!-- 총 회원수 조회 -->
<!-- 	<select id="selectListCount" resultType="_int">
		select
		       count(*)
		  from member
	</select> -->
	
	<select id="selectListCount" parameterType="Member" resultType="_int">
		select
		       count(*)
		  from member
		  left join host_info using (user_id)
		<if test="userType != null">
			where user_type like #{userType}||'%' or user_type like '%'||#{userType}||'%' or user_type like '%'||#{userType} or user_type like #{userType}
		</if>
		<if test="userId != null">
			where user_id like #{userId}||'%' or user_id like '%'||#{userId}||'%' or user_id like '%'||#{userId} or user_id like #{userId}
		</if>
	</select>	
	
	<!-- 모든 회원리스트 조회 -->
<!-- 	<select id="selectList" resultMap="adminMemberResultSet">
		 select
		       user_type
		     , user_id
		     , user_nickname
		     , user_email
		     , user_phone
		     , enroll_date
		     , modify_date
		     , user_status
		     , host_status
		  from member
		  left join host_info using (user_id)
		 order by decode(host_status, 'W', 1), decode(user_status, 'Y', 2), enroll_date desc
	</select> -->
	<select id="selectList" parameterType="Member" resultMap="adminMemberResultSet">
		select
		       user_type
		     , user_id
		     , user_nickname
		     , user_email
		     , user_phone
		     , enroll_date
		     , modify_date
		     , user_status
		     , host_status
		  from member
		  left join host_info using (user_id)
		<if test="userType != null">
			where user_type like #{userType}||'%' or user_type like '%'||#{userType}||'%' or user_type like '%'||#{userType} or user_type like #{userType}
		</if>
		<if test="userId != null">
			where user_id like #{userId}||'%' or user_id like '%'||#{userId}||'%' or user_id like '%'||#{userId} or user_id like #{userId}
		</if>
		<if test="userStatus != null and userType !=''">
			order by decode(host_status, 'W', 1),decode(user_status, #{userStatus}, 2), enroll_date desc
		</if>
		<if test="userStatus == null or userType ==''">
			order by decode(host_status, 'W', 1),decode(user_status, 'Y', 2), enroll_date desc
		</if>
	</select>	
	<!-- 회원상세정보 조회 -->
	<select id="selectDetail" parameterType="String" resultMap="adminMemberResultSet">
		select
		       user_id
		     , user_type
		     , user_pwd
		     , user_nickname
		     , user_email
		     , user_phone
		     , user_profile
		     , user_profile_c
		     , profile_path
		     , user_status
		     , enroll_date
		     , modify_date
		     , withdrawal_date
		     , user_memo
		     , host_status
		  from member
		  left join host_info using (user_id)
		 where user_id = #{userId}
	</select>
	
	<!-- 호스트정보 조회 -->
	<select id="selectHostInfo" parameterType="String" resultMap="adminHostInfoResultSet">
		select
		       user_id
		     , business_no
		     , business_name
		     , business_license
		     , license_path
		     , business_loc
		     , business_acc
		     , business_phone
		     , business_email
		     , host_status
		  from host_info
		 where user_id=#{userId}
	</select>
	
	<!-- 회원상태, 메모 저장 -->
	<update id="updateUserInfo" parameterType="Member">
		update
		       member
		   set user_status = #{userStatus}, user_memo = #{userMemo}
		 where user_id = #{userId}
	</update>
	
	<!-- 회원유형 변경(Host로 변경) -->
	<update id="updateUserType" parameterType="String">
		update
		       member
		   set user_type = 'Host'
		 where user_id = #{userId}
	</update>
	
	<!-- 호스트정보 상태변경(수락) -->
	<update id="updateHostStatusY" parameterType="String">
		update
		       host_info
		   set host_status = 'Y'
		 where user_id = #{userId}
	</update>
		
	<!-- 호스트정보 상태변경(거절) -->
	<update id="updateHostStatusN" parameterType="String">
		update
		       host_info
		   set host_status = 'N'
		 where user_id = #{userId}
	</update>

</mapper>